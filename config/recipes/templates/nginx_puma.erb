upstream egtaonline {
  server unix://<%= shared_path %>/sockets/puma.sock fail_timeout=0;
}

server {
  listen 80;
  server_name egtaonline;
  root <%= current_path %>/public;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  if (-f $document_root/system/maintenance.html) {
      return 503;
  }

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;

    # If the file exists as a static file serve it directly without
    # running all the other rewite tests on it
    if (-f $request_filename) {
      break;
    }

    # check for index.html for directory index
    # if its there on the filesystem then rewite
    # the url to add /index.html to the end of it
    # and then break to send it to the next config rules.
    if (-f $request_filename/index.html) {
      rewrite (.*) $1/index.html break;
    }

    # this is the meat of the rack page caching config
    # it adds .html to the end of the url and then checks
    # the filesystem for that file. If it exists, then we
    # rewite the url to have explicit .html on the end
    # and then send it on its way to the next config rule.
    # if there is no file on the fs then it sets all the
    # necessary headers and proxies to our upstream mongrels
    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }

    if (!-f $request_filename) {
      proxy_pass http://egtaonline;
      break;
    }
  }
  error_page 503 @maintenance;
  location @maintenance {
      rewrite  ^(.*)$  /system/maintenance.html last;
      break;
  }

  error_page 500 502 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}